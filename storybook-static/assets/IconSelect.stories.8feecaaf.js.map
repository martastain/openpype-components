{"version":3,"file":"IconSelect.stories.8feecaaf.js","sources":["../../src/IconSelect/IconSelect.tsx"],"sourcesContent":["import { forwardRef, useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Dropdown, DropdownProps } from '../Dropdown'\nimport { Icon, IconType, iconSet } from '../Icon'\n\nconst IconStyled = styled.div<Pick<IconTemplateProps, 'valueTemplate' | 'isActive'>>`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n\n  gap: 8px;\n  padding-left: 0.5rem;\n\n  height: 30px;\n\n  span:last-child {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  /* valueTemplate */\n  ${({ valueTemplate }) =>\n    valueTemplate\n      ? css`\n          color: var(--color-text);\n          border: 1px solid var(--color-grey-03);\n          background-color: var(--color-grey-00);\n\n          width: 150px;\n        `\n      : css`\n          width: 100%;\n        `}\n\n  /* isActive */\n    ${({ isActive }) =>\n    isActive &&\n    css`\n      background: rgba(100, 181, 246, 0.16);\n    `}\n`\n\nexport interface IconTemplateProps {\n  value: IconSelectProps['value']\n  valueTemplate?: boolean\n  isActive?: boolean\n  isSelected?: boolean\n}\n\nconst IconTemplate = ({ value, valueTemplate, isActive, isSelected }: IconTemplateProps) => {\n  return (\n    <IconStyled valueTemplate={valueTemplate} isActive={isSelected}>\n      {value.map((icon) => (\n        <Icon key={icon} icon={icon as IconType} />\n      ))}\n      {value.length < 2 && <span>{value}</span>}\n    </IconStyled>\n  )\n}\n\nexport interface IconSelectProps\n  extends Omit<DropdownProps, 'options' | 'valueTemplate' | 'itemTemplate' | 'search' | 'ref'> {\n  value: DropdownProps['value']\n  onChange?: DropdownProps['onChange']\n  featured?: IconType[]\n  featuredOnly?: boolean\n  multiSelect?: DropdownProps['multiSelect']\n}\n\nexport const IconSelect = forwardRef<HTMLDivElement, IconSelectProps>(\n  ({ value, onChange, featured = [], multiSelect, featuredOnly, ...props }, ref) => {\n    const dropdownOptions = useMemo(() => {\n      const dropdownOptions = []\n\n      // either uses user set icons or all icons from iconSet\n      const iconKeys = featuredOnly ? featured : Object.keys(iconSet)\n      // map icon keys to dropdown options (label and value)\n      for (const key of iconKeys) {\n        dropdownOptions.push({ label: key, value: key as string })\n      }\n      return dropdownOptions\n    }, [])\n\n    const featuredStrings = featured.map((icon) => icon as string)\n\n    // show featured icons first\n    dropdownOptions.sort((a, b) => {\n      if (featuredStrings.includes(a.value) && !featuredStrings.includes(b.value)) return -1\n      if (!featuredStrings.includes(a.value) && featuredStrings.includes(b.value)) return 1\n      return 0\n    })\n\n    return (\n      <Dropdown\n        value={value}\n        multiSelect={multiSelect}\n        valueTemplate={() => <IconTemplate value={value} valueTemplate />}\n        options={dropdownOptions}\n        itemTemplate={({ value }, isActive, isSelected) => (\n          <IconTemplate value={[value]} isActive={isActive} isSelected={isSelected} />\n        )}\n        onChange={onChange}\n        search\n        valueStyle={{ width: 150, ...props.valueStyle }}\n        style={{ maxWidth: 150, ...props.style }}\n        ref={ref}\n        {...props}\n        maxOptionsShown={Math.max(props.maxOptionsShown || 25, featured.length)}\n        minSelected={1}\n      />\n    )\n  },\n)\n"],"names":["IconStyled","styled","div","valueTemplate","css","isActive","IconTemplate","value","_jsxs","isSelected","icon","IconSelect","forwardRef","onChange","multiSelect","featuredOnly","ref","dropdownOptions","useMemo","dropdownOptions2","iconKeys","featured","iconSet","key","featuredStrings","a","b","_jsx","Dropdown","value2","props","valueStyle","style"],"mappings":"2z9DAKAA,GAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA0BC,CAAAA,CAiBrB,cAAAC,CAAgB,IAAAA,EAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAEbA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAOAA,CAAAA,CAKD,SAAAC,CAAW,IAAAA,GAAAD;AAAAA;AAAAA;AAAAA,EAclBE,EAAA,CAAA,CAAsB,MAAAC,EAAEA,cAAAA,EAAOJ,SAAAA,EAAeE,WAAAA,CAAwC,IACpFG,EAAAR,GAAA,CACa,cAAAG,EAACA,SAAAA,EAAwCM,SAAAA,CAAAA,EAAAA,IAAAA,GAAAA,EAAAA,EAAAA,CAE3C,KAAAC,CAAYA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,OAAAA,GAAAA,EAAAA,OAAAA,CAEE,SAAAH,CAAOA,CAAAA,CAAAA,CAAa,CAAA,EAcxCI,EAAAC,EAAA,QAAA,WAAA,CAAA,CACJ,MAAAL,EAAEA,SAAAA,EAAOM,SAAAA,EAAAA,CAAAA,EAAuB,YAAAC,EAAEA,aAAAA,KAAaC,CAAuB,EAAAC,IAAA,CACrE,MAAAC,EAAAC,EAAAA,QAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,CAAA,EAGAC,EAAAL,EAAAM,EAAA,OAAA,KAAAC,EAAA,EAEA,UAAAC,KAAAH,EACEH,EAAAA,KAAAA,CAAqB,MAAAM,EAASA,MAAAA,CAAYA,CAAAA,EAE5C,OAAAJ,CAAOF,EAAAA,CAAAA,CAAAA,EAGTO,EAAAH,EAAA,IAAAX,GAAAA,CAAA,EAGAO,OAAAA,EAAAA,KAAAA,CAAAA,EAAAA,IACEO,EAAA,SAAAC,EAAA,KAAA,GAAA,CAAAD,EAAA,SAAAE,EAAA,KAAA,EAA6E,GAC7E,CAAAF,EAAA,SAAAC,EAAA,KAAA,GAAAD,EAAA,SAAAE,EAAA,KAAA,EAA6E,EAC7E,CAAO,EAGTC,EAAAC,EAAA,CACW,MAAArB,EACPA,YAAAA,EACAO,cAAAA,IAAAA,EAAAA,EAAAA,CACkC,MAAAP,EAACA,cAAAA,EAA2B,CAAA,EAAI,QAAAU,EACzDA,aAAAA,CAAAA,CACM,MAAAY,CAAEtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CACF,MAAA,CAAAsB,CAAA,EAAc,SAAAxB,EAAGA,WAAAA,CAAoBI,CAAAA,EAClD,SAAAI,EACFA,OAAAA,GACM,WAAA,CACM,MAAA,IAAS,GAAAiB,EAAA,UAAcC,EAAW,MAAA,CACvC,SAAA,IAAY,GAAAD,EAAA,KAAcE,EAAM,IAAAhB,EACvCA,GAAAA,EACIc,gBAAAA,KAAAA,IAAAA,EAAAA,iBAAAA,GAAAA,EAAAA,MAAAA,EACkE,YAAA,CACzD,CAAA,CAGnB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;"}