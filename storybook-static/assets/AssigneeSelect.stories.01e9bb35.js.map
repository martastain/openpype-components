{"version":3,"file":"AssigneeSelect.stories.01e9bb35.js","sources":["../../src/AssigneeSelect/AssigneeSelect.tsx","../../src/AssigneeSelect/AssigneeField.tsx","../../src/AssigneeSelect/AssigneeDropdownTemplate.tsx"],"sourcesContent":["import { AssigneeField, AssigneeDropdownTemplate } from '.'\nimport { Dropdown } from '../Dropdown'\nimport { forwardRef, useMemo } from 'react'\n\nexport interface AssigneeSelectProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  value: string[]\n  options: {\n    name: string\n    fullName?: string\n    avatarUrl?: string\n  }[]\n  editor?: boolean\n  onChange?: (names: string[]) => void\n  widthExpand?: boolean\n  disabled?: boolean\n  align?: 'left' | 'right'\n  isMultiple?: boolean\n}\n\nexport const AssigneeSelect = forwardRef<HTMLDivElement, AssigneeSelectProps>(\n  ({ value = [], options = [], onChange, widthExpand, disabled, editor, align, ...props }, ref) => {\n    // useMemo assignedUsers Objects\n    const assignedUsers = useMemo(\n      () => options.filter((option) => value.includes(option.name)),\n      [value, options],\n    )\n\n    if (!editor) return <AssigneeField value={assignedUsers} {...props} />\n\n    return (\n      <Dropdown\n        value={value}\n        valueTemplate={() => <AssigneeField value={assignedUsers} {...props} />}\n        options={options}\n        dataKey={'name'}\n        disabled={disabled}\n        itemTemplate={(ops, isActive, isSelected) => (\n          <AssigneeDropdownTemplate {...ops} isSelected={isSelected} />\n        )}\n        onChange={(names) => onChange && onChange(names.map((name) => name.toString() as string))}\n        widthExpand={widthExpand}\n        align={align}\n        multiSelect\n        search\n        searchFields={['name', 'fullName']}\n        ref={ref}\n      />\n    )\n  },\n)\n","import styled, { css } from 'styled-components'\nimport { UserImagesStacked } from '../User/UserImagesStacked'\nimport { forwardRef } from 'react'\n\nconst FieldStyled = styled.div<{\n  disabled?: boolean\n  isMultiple?: boolean\n}>`\n  position: relative;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  height: 30px;\n  gap: 4px;\n\n  span {\n    position: relative;\n    top: 1px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      color: var(--color-text-dim);\n      span {\n        color: var(--color-text-dim);\n      }\n      img {\n        opacity: 0.75;\n      }\n      background-color: var(--input-disabled-background-color);\n    `}\n\n  ${({ isMultiple }) =>\n    isMultiple &&\n    css`\n      ::before {\n        content: 'Multiple (';\n        margin-right: 4px;\n      }\n\n      ::after {\n        content: ')';\n        margin-left: 4px;\n      }\n    `}\n`\n\nexport interface AssigneeFieldProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: {\n    name: string\n    fullName?: string\n    avatarUrl?: string\n  }[]\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void\n  disabled?: boolean\n  isMultiple?: boolean\n  placeholder?: string\n  emptyMessage?: string\n  emptyIcon?: boolean\n  size?: number\n}\n\nexport const AssigneeField = forwardRef<HTMLDivElement, AssigneeFieldProps>(\n  (\n    {\n      value = [],\n      onClick,\n      disabled,\n      isMultiple,\n      placeholder,\n      emptyIcon = true,\n      emptyMessage = '',\n      size = 21,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <FieldStyled\n        onClick={!disabled ? (e) => onClick && onClick(e) : undefined}\n        disabled={disabled}\n        isMultiple={isMultiple && (!disabled || !placeholder)}\n        {...props}\n        ref={ref}\n      >\n        {!(disabled && placeholder) ? (\n          value.length ? (\n            <>\n              <UserImagesStacked\n                users={value}\n                size={size}\n                gap={-0.3}\n                userStyle={{\n                  minWidth: size,\n                  minHeight: size,\n                  maxHeight: size,\n                  maxWidth: size,\n                }}\n              />\n              {value.length < 2 && <span>{value[0]?.fullName}</span>}\n            </>\n          ) : (\n            <>\n              {emptyIcon && !isMultiple && (\n                <span className=\"material-symbols-outlined\">add_circle</span>\n              )}\n              {emptyMessage && <span>{emptyMessage}</span>}\n            </>\n          )\n        ) : (\n          <span>{placeholder}</span>\n        )}\n      </FieldStyled>\n    )\n  },\n)\n","import styled, { css } from 'styled-components'\nimport { UserImage } from '../User/UserImage'\n\nconst RowStyled = styled.span`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px;\n\n  ${({ isSelected }: { isSelected?: boolean }) =>\n    isSelected &&\n    css`\n      background-color: var(--color-row-hl);\n    `}\n`\n\nexport interface AssigneeDropdownProps {\n  name: string\n  fullName?: string\n  avatarUrl?: string\n  isSelected?: boolean\n  onClick?: () => void\n  size?: number\n}\n\nexport const AssigneeDropdownTemplate = ({\n  name,\n  avatarUrl,\n  fullName,\n  isSelected,\n  onClick,\n  size = 21,\n}: AssigneeDropdownProps) => {\n  return (\n    <RowStyled {...{ isSelected, onClick }}>\n      <UserImage src={avatarUrl} fullName={fullName || name} size={size} />\n      {fullName || name}\n    </RowStyled>\n  )\n}\n"],"names":["AssigneeSelect","forwardRef","value","options","onChange","widthExpand","disabled","editor","align","ref","assignedUsers","useMemo","option","_jsx","Dropdown","props","ops","isSelected","names","name","AssigneeField","FieldStyled","styled","div","css","isMultiple","onClick","placeholder","emptyMessage","size","e","undefined","UserImagesStacked","_a","fullName","_jsxs","_Fragment","emptyIcon","RowStyled","span","AssigneeDropdownTemplate","avatarUrl"],"mappings":"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"}